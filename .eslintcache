[{"C:\\Users\\borni\\Desktop\\nodews\\reactproject\\src\\index.js":"1","C:\\Users\\borni\\Desktop\\nodews\\reactproject\\src\\App.js":"2","C:\\Users\\borni\\Desktop\\nodews\\reactproject\\src\\Cart.js":"3","C:\\Users\\borni\\Desktop\\nodews\\reactproject\\src\\CartItem.js":"4","C:\\Users\\borni\\Desktop\\nodews\\reactproject\\src\\Navbar.js":"5"},{"size":739,"mtime":1610565832784,"results":"6","hashOfConfig":"7"},{"size":2343,"mtime":1610578471725,"results":"8","hashOfConfig":"7"},{"size":1564,"mtime":1610578007216,"results":"9","hashOfConfig":"7"},{"size":4479,"mtime":1610577255087,"results":"10","hashOfConfig":"7"},{"size":782,"mtime":1610578245323,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"osplji",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\borni\\Desktop\\nodews\\reactproject\\src\\index.js",[],["24","25"],"C:\\Users\\borni\\Desktop\\nodews\\reactproject\\src\\App.js",["26"],"C:\\Users\\borni\\Desktop\\nodews\\reactproject\\src\\Cart.js",[],"C:\\Users\\borni\\Desktop\\nodews\\reactproject\\src\\CartItem.js",["27"],"// class based component\r\n\r\nimport React from 'react';\r\n\r\n\r\n// class CartItem extends React.Component {\r\n\r\n//     constructor(props){\r\n//         super(props);\r\n//         // this.state = {\r\n//         //     price: 999,\r\n//         //     title: \"Phone\",\r\n//         //     qty: 1,\r\n//         //     imgsrc: ''\r\n//         // }\r\n//         this.state = this.props; //props cannot be accessed so pass props in constructor arg\r\n        \r\n//     }\r\n//     // for normal fun we have use .bind(this) in onClick eventListner\r\n//     IncreaseFun = () => {\r\n//         // form-1\r\n//         this.setState({  // rerender the component with updated value async so pass calback\r\n//             qty: this.state.qty + 1\r\n//         }); // batching happens in eventHandlers so last setState of this type is called when there are many of form-1 so rerender only once\r\n//         // but in promises and ajax calls batching doesn't happen and sync\r\n\r\n//         // form-2\r\n//         // this.setState((prevstate)=>{  // rerender the component with updated value async so pass calback\r\n//         //     return {\r\n//         //         qty: prevstate.qty + 1\r\n//         //     }\r\n//         // }); // batching happens in eventHandlers but all setState of this type is called when there are many of form-2 but rerender only once\r\n//     } \r\n\r\n//     DecreaseFun = () => {\r\n//         if(this.state.qty != 0)\r\n//         {   \r\n//             this.setState({  // rerender the component with updated value\r\n//                 qty: this.state.qty - 1\r\n//             });\r\n//         }\r\n        \r\n//     }\r\n\r\n//   render(){\r\n//       const {price, title, qty, imgsrc} = this.state;\r\n//       return (\r\n//         <div className=\"cart-item\">\r\n//             <div className=\"left-block\">\r\n//                 <img style = {styles.image} src={imgsrc}/>\r\n//             </div>\r\n//             <div className=\"right-block\">\r\n//                 <div style={{fontSize:25}}>{title}</div>\r\n//                 <div style={{color:\"gray\"}}>Rs. {price}</div>\r\n//                 <div style={{color:\"gray\"}}>Qty. {qty}</div>\r\n//                 <div className=\"cart-item-actions\">\r\n//                     <img\r\n//                         alt=\"increase\"\r\n//                         className=\"action-icons\"\r\n//                         src=\"https://image.flaticon.com/icons/svg/992/992651.svg\"\r\n//                         onClick={this.IncreaseFun} />\r\n//                     <img\r\n//                         alt=\"decrease\"\r\n//                         className=\"action-icons\"\r\n//                         src=\"https://image.flaticon.com/icons/svg/1665/1665612.svg\" \r\n//                         onClick={this.DecreaseFun} />\r\n//                     <img alt=\"delete\" className=\"action-icons\" src=\"https://image.flaticon.com/icons/svg/1214/1214428.svg\" />\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n//     }\r\n// }\r\n\r\nconst CartItem = (props) => {\r\n\r\n  \r\n    const {price, title, qty, imgsrc} = props.product;\r\n    const {onIncQty, onDecQty, onDelQty} = props;\r\n    return (\r\n    <div className=\"cart-item\">\r\n        <div className=\"left-block\">\r\n            <img style = {styles.image} src={imgsrc}/>\r\n        </div>\r\n        <div className=\"right-block\">\r\n            <div style={{fontSize:25}}>{title}</div>\r\n            <div style={{color:\"gray\"}}>Rs. {price}</div>\r\n            <div style={{color:\"gray\"}}>Qty. {qty}</div>\r\n            <div className=\"cart-item-actions\">\r\n                <img\r\n                    alt=\"increase\"\r\n                    className=\"action-icons\"\r\n                    src=\"https://image.flaticon.com/icons/svg/992/992651.svg\"\r\n                    onClick={()=> onIncQty(props.product)} />\r\n                <img\r\n                    alt=\"decrease\"\r\n                    className=\"action-icons\"\r\n                    src=\"https://image.flaticon.com/icons/svg/1665/1665612.svg\" \r\n                    onClick={()=> onDecQty(props.product)} />\r\n                <img \r\n                    alt=\"delete\" \r\n                    className=\"action-icons\" \r\n                    src=\"https://image.flaticon.com/icons/svg/1214/1214428.svg\" \r\n                    onClick={()=> onDelQty(props.product.id)} />\r\n                \r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n    \r\n}\r\n\r\n\r\nconst styles = {\r\n    image : {\r\n        height: 110,\r\n        width: 110,\r\n        borderRadius: 4,\r\n        backgroundColor: \"gray\"\r\n    }\r\n}\r\n\r\nexport default CartItem;\r\n","C:\\Users\\borni\\Desktop\\nodews\\reactproject\\src\\Navbar.js",[],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":65,"column":54,"nodeType":"34","messageId":"35","endLine":65,"endColumn":56},{"ruleId":"36","severity":1,"message":"37","line":83,"column":13,"nodeType":"38","endLine":83,"endColumn":55},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]